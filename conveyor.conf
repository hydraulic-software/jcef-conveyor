// You shouldn't build this directly, run build.sh instead.

include required("/stdlib/jdk/19/amazon.conf")
include required("/stdlib/jvm/from-maven.conf")

// include required("self-signing.conf")

temp {
	jcef {
		// Conveyor's input specs aren't quite powerful enough to undo all the wrapping imposed by jcef-maven. We need an external helper
		// script. These keys are overridden by build.sh and point to where we can find the fixed up native packages.
		mac.amd64   = please-run-the-external-build-script
		mac.aarch64 = please-run-the-external-build-script
		windows.amd64 = target/windows
	}
}

app {
	rdns-name = dev.hydraulic.jcef-conveyor
	version = 1
	site.base-url = "localhost:5000"

	inputs = [ target/jcef-conveyor-1.0-SNAPSHOT.jar ] ${app.inputs}

	machines = [ mac, windows.amd64 ]

	jvm {
		gui = jcefconveyor.SampleFrame
	}

	windows {
		inputs += target/appassembler/repo
		amd64.inputs += ${temp.jcef.windows.amd64} -> jcef

		// JCEF expects install.lock to exist which isn't in the tarball, otherwise it tries to delete bits of the app!
		inputs += {
			content = "."
			to = jcef/install.lock
		}
	}

	mac {
		// CEF is a series of frameworks and helper apps. JCEF adds some extra files on top. We get them from the natives tarballs
		// that were downloaded by build.sh
		amd64.bundle-extras += {
			from = ${temp.jcef.mac.amd64}
			to = Frameworks
		}
		aarch64.bundle-extras += {
			from = ${temp.jcef.mac.aarch64}
			to = Frameworks
		}

		// JCEF expects install.lock to exist which isn't in the tarball, otherwise it tries to delete bits of the app!
		bundle-extras += {
			content = "."
			to = Frameworks/install.lock
		}

		// These keys are used by Electron and can also benefit JCEF apps.
		info-plist {
			NSSupportsAutomaticGraphicsSwitching = true
			NSRequiresAquaSystemAppearance = false
			NSHighResolutionCapable = true
			NSQuitAlwaysKeepsWindows = false

			LSEnvironment {
				MallocNanoZone = "0"
			}
			NSAppTransportSecurity {
				NSAllowsArbitraryLoads = true
			}
			NSBluetoothAlwaysUsageDescription = This app needs access to Bluetooth
			NSBluetoothPeripheralUsageDescription = This app needs access to Bluetooth
			NSCameraUsageDescription = This app needs access to the camera
		}
	}
}

conveyor.compatibility-level = 7
